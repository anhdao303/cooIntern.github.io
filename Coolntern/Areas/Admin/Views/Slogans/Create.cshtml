@model Coolntern.Models.Slogan

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}
@section _Header{
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Latest compiled JavaScript -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>

    <style>
        .page {
            padding: 0 5rem 3rem 5rem;
        }
    </style>
}

<div class="container page">
    <h2 style="text-align: center">Tạo Slogan</h2>
    @using (Html.BeginForm("Create", "Slogans", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.Label("Slogan", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Công việc", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.job, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.job, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Thông điệp", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.message, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.message, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Tải hình ảnh", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" name="img" id="img" accept=".jpg, .png, .gif, .jpeg, .bmp" />
                    @Html.ValidationMessageFor(model => model.image, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Link", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.link, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.link, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Meta", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.meta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.meta, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="container">

                <div class="form-group">
                    <div class="row">
                        @Html.Label("Hiển thị", htmlAttributes: new { @class = "control-label col-md-auto" })
                        <div class="col-md-auto">
                            <div class="checkbox">
                                @{
                                    bool hide = true;
                                }
                                @Html.CheckBoxFor(model => hide, new { style = "margin: -1px 5px" })
                                @Html.ValidationMessageFor(model => model.hide, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @Html.Label("Thứ tự", htmlAttributes: new { @class = "control-label col-md-auto" })
                        <div class="col-md-auto">
                            @Html.EditorFor(model => model.order, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.order, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

        

                <div class="form-group" style="text-align:center">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Lưu" class="btn btn-danger" />
                        <a href="@Url.Action("Index", "Slogans")" class="btn btn-secondary">Trở lại</a>
                    </div>
                </div>
            </div>
    }
</div>
@section _Footer{

    <!-- Page level plugins -->
    <script src="~/Areas/Admin/Content/ckfinder/ckfinder.js"></script>
    <script src="~/Areas/Admin/Content/ckeditor/ckeditor.js"></script>
    <script type="text/javascript">
        var editor = CKEDITOR.replace("detail");
        var editor = CKEDITOR.replace("detail", { height: '800px' });
        customConfig: '/Areas/Admin/Content/ckeditor/config.js'

    </script>
    <script>
        $(function () {
            $("#name").keyup(function () {
                var text = $.trim($(this).val().toLowerCase());
                var text_create;
                text_create = text.replace(/à|á|ạ|ả|ã|ă|ặ|ắ|ẳ|ẵ|â|ấ|ầ|ậ|ẩ|ẫ/g, "a").replace(/\ /g, '-').replace(/đ /g, "d").replace(/é|è|ẹ|ẻ|ẽ/g, "e").replace(/í|ì|ỉ|ĩ|ị/g, "i").replace(/ò|ó|ỏ|ọ|õ|ô|ố|ồ|ộ|ỗ|ổ|ơ|ớ|ờ|ở|ỡ|ợ/g, "o").replace(/ú|ụ|ù|ủ|ũ|ư|ứ|ừ|ự|ữ|ử/g, "u")
                $('#meta').val(text_create);
            }).keyup();
        });
    </script>

}